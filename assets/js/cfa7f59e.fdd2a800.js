"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4985],{3881:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(8101);const s={},c=o.createContext(s);function r(e){const t=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(c.Provider,{value:t},e.children)}},5318:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"\u524d\u7aef/React/API/Hooks/useState","title":"useState","description":"useState \u662f\u4e00\u4e2a React Hook\uff0c\u5b83\u5141\u8bb8\u4f60\u5411\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a \u72b6\u6001\u53d8\u91cf\u3002","source":"@site/docs/\u524d\u7aef/React/API/Hooks/useState.mdx","sourceDirName":"\u524d\u7aef/React/API/Hooks","slug":"/\u524d\u7aef/React/API/Hooks/useState","permalink":"/docs/\u524d\u7aef/React/API/Hooks/useState","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/\u524d\u7aef/React/API/Hooks/useState.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"\u524d\u7aef","previous":{"title":"useRef","permalink":"/docs/\u524d\u7aef/React/API/Hooks/useRef"},"next":{"title":"useSyncExternalStore","permalink":"/docs/\u524d\u7aef/React/API/Hooks/useSyncExternalStore"}}');var s=n(5105),c=n(3881);const r={},a="useState",u={},i=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"usestate",children:"useState"})}),"\n",(0,s.jsx)(t.p,{children:"useState \u662f\u4e00\u4e2a React Hook\uff0c\u5b83\u5141\u8bb8\u4f60\u5411\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e2a \u72b6\u6001\u53d8\u91cf\u3002"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-JSX",children:'import { useState } from "react";\n\nexport default function Counter() {\n  const [count, setCount] = useState(0);\n\n  function handleClick() {\n    setCount(count + 1);\n  }\n\n  return <button onClick={handleClick}>You pressed me {count} times</button>;\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);