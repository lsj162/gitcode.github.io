"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["7408"],{5943:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>i,default:()=>g,contentTitle:()=>o,assets:()=>s,toc:()=>l,metadata:()=>r});var r=JSON.parse('{"id":"\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u805A\u5408/index","title":"\u805A\u5408","description":"\u6CA1\u6709\u7D22\u5F15\uFF0CMongoDB \u5FC5\u987B\u6267\u884C\u96C6\u5408\u626B\u63CF\uFF0C\u5373\u626B\u63CF\u96C6\u5408\u4E2D\u7684\u6BCF\u4E2A\u6587\u6863\u3002","source":"@site/docs/\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u805A\u5408/index.mdx","sourceDirName":"\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u805A\u5408","slug":"/\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u805A\u5408/","permalink":"/docs/\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u805A\u5408/","draft":false,"unlisted":false,"editUrl":"https://github.com/docs/\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u805A\u5408/index.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"\u540E\u7AEF","previous":{"title":"\u7D22\u5F15","permalink":"/docs/\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u7D22\u5F15/"},"next":{"title":"\u89D2\u8272\u6743\u9650","permalink":"/docs/\u540E\u7AEF/\u6570\u636E\u5E93/MongoDB/Api/\u89D2\u8272\u6743\u9650/"}}'),a=t(96773),d=t(16070);let i={},o="\u805A\u5408",s={},l=[{value:"\u8BED\u6CD5",id:"\u8BED\u6CD5",level:2},{value:"\u4F8B\u5B50",id:"\u4F8B\u5B50",level:2}];function c(e){let n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,d.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"\u805A\u5408",children:"\u805A\u5408"})}),"\n",(0,a.jsx)(n.p,{children:"\u6CA1\u6709\u7D22\u5F15\uFF0CMongoDB \u5FC5\u987B\u6267\u884C\u96C6\u5408\u626B\u63CF\uFF0C\u5373\u626B\u63CF\u96C6\u5408\u4E2D\u7684\u6BCF\u4E2A\u6587\u6863\u3002\n\u60A8\u4E0D\u80FD\u5728_id \u5B57\u6BB5\u4E0A\u5220\u9664\u6B64\u7D22\u5F15\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u8BED\u6CD5",children:"\u8BED\u6CD5"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mongo",children:"db.collection.aggregate( [ { <stage> }, ... ] )\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u4F8B\u5B50",children:"\u4F8B\u5B50"}),"\n",(0,a.jsx)(n.p,{children:"\u805A\u5408\u7BA1\u9053\u9636\u6BB5"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-mongo",children:'db.orders.aggregate([\n  // Stage 1: Filter pizza order documents by date range\n  {\n    $match: {\n      date: {\n        $gte: new ISODate("2020-01-30"),\n        $lt: new ISODate("2022-01-30"),\n      },\n    },\n  },\n\n  // Stage 2: Group remaining documents by date and calculate results\n  {\n    $group: {\n      _id: { $dateToString: { format: "%Y-%m-%d", date: "$date" } },\n      totalOrderValue: { $sum: { $multiply: ["$price", "$quantity"] } },\n      averageOrderQuantity: { $avg: "$quantity" },\n    },\n  },\n\n  // Stage 3: Sort documents by totalOrderValue in descending order\n  {\n    $sort: { totalOrderValue: -1 },\n  },\n]);\n'})})]})}function g(e={}){let{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);